#pragma save_types
#include <mudlib.h>
#include "chess.h"

inherit ROOM;
  
string signfunc()
{
  return
  "CHESS\n"+
  "=====\n"+
  "\n"+
  "Rules of Chess:\n"+
  "  The goal of chess is to force the opponent's king ("+k+" or "+K+") \n"+
  "  into a 'check' position, whereby he cannot move without being put into \n"+
  "  capture range of one of your pieces. Players take turns moving one \n"+
  "  piece per turn. For a description of the various pieces, look at the \n"+
  "  plaque.\n"+
  "\n"+
  "Commands available in this room:\n"+
  "  play <1|2|npc>\t\t\tPlay by yourself, with another player, or against an NPC\n"+
  "  move <piece> <dir> <num>\t\t\tMove your <piece> <dir> <num> times\n"+
  "  view\t\t\tView the board (brief mode)\n"+
  "  look,l\t\t\tView the board (verbose mode)\n"+
  "  giveup\t\t\tGive up, lose the game\n"+
  "  nocontest\t\t\tMatch ends in a draw if all players agree
  "\n"+
  "  reset board\t\t\tReset the board\n";
}

string plaquefunc()
{
  return
  "CHESS PIECES\n"+
  "============\n"+
  "\n"+
  "Pawns:\n"+
  "  Pawns can move forward one square (two from their starting position)\n"+
  "  and they capture pieces diagonally in front of them by one square.\n"+
  "  	
}

string query_look()
{
  string look;
  look =
  "   == CHESS ==   \n"+
  "\n"+
  ""+BOARD+""+
  "There is a wooden sign hanging on the wall.\n"+
  "There's also a small golden plaque on the opposite wall.\n"+
  "\n\n"+
  "        The only obvious exit is %^BOLD%^%^GREEN%^out%^RESET%^.\n"+
  ""+this_object()->query_look_contents()+"";
  return look;
}

void extra_create()
{
  set_short( "Chessboard" );
  set_long(wrap("This long desc should not be seeable.\n"));
  set_item_desc(([
  ({"wooden sign", "sign"}) : (: signfunc :),
  ({"small golden plaque", "small plaque", "golden plaque", "plaque"}) :
  (: plaquefunc :)]));
  set_safe_room(1);
  set_no_teleport(1);
  set_pre_exit_function("out", "playing_check");
  set_exits(([
  "out" : "/u/a/allanon/workroom/connector.c"]));
}

int playing_check()
{
  if(this_player()->member_array(players))
  {
    message("info","You are in the middle of a chess game, you can't "+
    "just up and leave.\n",this_player());
    return 1;
  }
  return 0;
}